CREATE OR REPLACE TRIGGER MMOHONEY.AUDIT_DUMMY_TBL_TO_ADT_BIUD
  BEFORE INSERT OR UPDATE OR DELETE ON MMOHONEY.DUMMY_TABLE_TO_AUDIT
  FOR EACH ROW
DECLARE
    AUDIT_FIELDS_NOT_SUPPLIED EXCEPTION;
    USERNAME   VARCHAR2(255);
    TABLE_NAME VARCHAR2(255);
    TABLE_ID   NUMBER(10);
    DML_EVENT  VARCHAR2(25);
    p_audit_id NUMBER(20);
BEGIN
    /*PARAMETER SETUP*/
    TABLE_NAME := 'DUMMY_TABLE_TO_AUDIT';

    IF ( INSERTING ) THEN
      USERNAME := :new.CREATED_BY;

      TABLE_ID := :new.ID;

      DML_EVENT := 'INSERT';
    END IF;

    IF ( UPDATING ) THEN
      USERNAME := :new.MODIFIED_BY;

      TABLE_ID := :new.ID;

      DML_EVENT := 'UPDATE';
    END IF;

    IF ( DELETING ) THEN
      USERNAME := :old.MODIFIED_BY;

      TABLE_ID := :old.ID;

      DML_EVENT := 'DELETE';
    END IF;

    /*RECORD INSERT/ DELETE STATEMENT*/
    IF ( INSERTING ) THEN
      MMOHONEY.AUDIT_PACKAGE.Entity_audit_record_insert(TABLE_NAME, TABLE_ID, USERNAME, p_audit_id);
    END IF;

    IF ( DELETING ) THEN
      MMOHONEY.AUDIT_PACKAGE.Entity_audit_record_delete(TABLE_NAME, TABLE_ID, USERNAME, p_audit_id);
    END IF;

    /*IF AUDIT FIELDS ARE NOT SUPPLIED RAISE AN EXCEPTION*/
    IF ( updating ) THEN
      IF ( ( :old.MODIFIED_BY = USERNAME )
           AND ( :old.MODIFIED_DATE = :new.MODIFIED_DATE ) ) THEN
        RAISE AUDIT_FIELDS_NOT_SUPPLIED;
      END IF;
    END IF;

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'FIRST_NAME', TABLE_ID, USERNAME, :new.FIRST_NAME, :old.FIRST_NAME, p_audit_id);

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'LAST_NAME', TABLE_ID, USERNAME, :new.LAST_NAME, :old.LAST_NAME, p_audit_id);

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'START_DATE', TABLE_ID, USERNAME, :new.START_DATE, :old.START_DATE, p_audit_id);

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'END_DATE', TABLE_ID, USERNAME, :new.END_DATE, :old.END_DATE, p_audit_id);

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'IS_SALARY', TABLE_ID, USERNAME, :new.IS_SALARY, :old.IS_SALARY, p_audit_id);

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'SALARY', TABLE_ID, USERNAME, :new.SALARY, :old.SALARY, p_audit_id);

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'HOURLY_WAGE', TABLE_ID, USERNAME, :new.HOURLY_WAGE, :old.HOURLY_WAGE, p_audit_id);

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'INFORMAL_NAME', TABLE_ID, USERNAME, :new.INFORMAL_NAME, :old.INFORMAL_NAME, p_audit_id);

    /*IN THIS CASE OF UPDATING PROVIDE SOME ADDITIONAL TEXT WHEN INFORMAL_NAME CHANGES*/
    IF ( UPDATING
         AND p_audit_id IS NOT NULL ) THEN
      MMOHONEY.AUDIT_PACKAGE.Entity_audit_update_text(p_audit_id, 'Informal name updated. Please let employees know.');
    END IF;

    MMOHONEY.AUDIT_PACKAGE.Entity_audit_check_val(DML_EVENT, TABLE_NAME, 'GENDER', TABLE_ID, USERNAME, :new.GENDER, :old.GENDER, p_audit_id);
END; 
