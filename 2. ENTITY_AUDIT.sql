--TABLE CREATION
CREATE TABLE MMOHONEY.ENTITY_AUDIT
  (
     ID             NUMBER(10) NOT NULL,
     USERNAME       VARCHAR2(35) NOT NULL,
     TIMESTAMP      DATE NOT NULL,
     DML_EVENT_TYPE VARCHAR2(20) NOT NULL,
     TABLE_NAME     VARCHAR2(35) NOT NULL,
     COLUMN_NAME    VARCHAR2(35) NOT NULL,
     NEW_VALUE      VARCHAR2(4000) NULL,
     OLD_VALUE      VARCHAR2(4000) NULL,
     TABLE_ID       NUMBER(10) NOT NULL,
     DISPLAY_TEXT   CLOB NULL
  ); 

--CONTRAINT
ALTER TABLE MMOHONEY.ENTITY_AUDIT
  ADD CONSTRAINT ENTITY_AUDIT_1U PRIMARY KEY (ID);

--INDEX
CREATE INDEX ENTITY_AUDIT_2
  ON MMOHONEY.ENTITY_AUDIT(TABLE_NAME, COLUMN_NAME, NEW_VALUE) COMPUTE STATISTICS;

CREATE INDEX ENTITY_AUDIT_3
  ON MMOHONEY.ENTITY_AUDIT(TABLE_NAME, COLUMN_NAME, TIMESTAMP) COMPUTE STATISTICS;
  
CREATE INDEX ENTITY_AUDIT_4
  ON MMOHONEY.ENTITY_AUDIT(TABLE_ID, TABLE_NAME, COLUMN_NAME, NEW_VALUE) COMPUTE STATISTICS;
  
ALTER TABLE MMOHONEY.ENTITY_AUDIT
  ADD CONSTRAINT FK_ENTITY_AUDIT_DML_EVENT FOREIGN KEY (DML_EVENT_TYPE) REFERENCES MMOHONEY.AUDIT_DML_EVENT_TYPE(DESCRIPTION);     

--PRIV   
GRANT SELECT, INSERT, UPDATE ON MMOHONEY.ENTITY_AUDIT TO MMOHONEY_ADMIN;

--SEQUENCE
CREATE SEQUENCE MMOHONEY.ENTITY_AUDIT_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999
  INCREMENT BY 1
  START WITH 1
  NOCACHE
  NOORDER
  NOCYCLE;
  
--MMOHONEY.ENTITY_AUDIT TRIGGER
CREATE OR REPLACE TRIGGER ENTITY_AUDIT_BI
  BEFORE INSERT ON MMOHONEY.ENTITY_AUDIT
  FOR EACH ROW
DECLARE
    v_newVal NUMBER(12) := 0;
    v_incval NUMBER(12) := 0;
BEGIN
    IF INSERTING
       AND :new.ID IS NULL
        OR :new.ID = 0 THEN
      SELECT MMOHONEY.ENTITY_AUDIT_SEQ.NEXTVAL
        INTO v_newVal
        FROM DUAL;

      :new.ID := v_newVal;
    END IF;
END; 
